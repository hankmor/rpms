package dendy.rpms.entity;

// Generated 2014-10-26 13:48:43 by Hibernate Tools 3.6.0

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;

import javax.persistence.*;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Animal generated by hbm2java
 */
@Entity
@Table(name = "animal", catalog = "rpms")
public class Animal implements java.io.Serializable {

    private Long id;
    private House house;
    private User userByUpdateUser;
    private Atta atta;
    private Animal animalByMother;
    private User userByCreateUser;
    private Animal animalByFather;
    private AnimalType animalType;
    private String microchipCode;
    private String tatooCode;
    private String studbookCode;
    private String earCode;
    private String lipCode;
    private String name;
    private Boolean sex;
    private Integer age;
    private Date birthDate;
    private String comeFrom;
    private Byte status;
    private Date chipTime;
    private Date createTime;
    private Date updateTime;
    private String remark;
    private Set<AnimalGenotype> animalGenotypes = new HashSet<AnimalGenotype>(0);
    private Set<Animal> animalsForMother = new HashSet<Animal>(0);
    private Set<Medical> medicals = new HashSet<Medical>(0);
    private Set<Anatomy> anatomies = new HashSet<Anatomy>(0);
    private Set<AntiEpidemic> antiEpidemics = new HashSet<AntiEpidemic>(0);
    private Set<Examination> examinations = new HashSet<Examination>(0);
    private Set<AnimalFeed> animalFeeds = new HashSet<AnimalFeed>(0);
    private Set<Animal> animalsForFather = new HashSet<Animal>(0);
    private Set<HouseTransfer> houseTransfers = new HashSet<HouseTransfer>(0);
    private Set<Atta> attas = new HashSet<Atta>(0);
    private Set<Adr> adrs = new HashSet<Adr>(0);

    public Animal() {
    }

    public Animal(Date birthDate) {
        this.birthDate = birthDate;
    }

    public Animal(House house, User userByUpdateUser, Atta atta, Animal animalByMother, User userByCreateUser, Animal animalByFather,
                  AnimalType animalType, String microchipCode, String tatooCode, String studbookCode, String earCode, String lipCode,
                  String name, Boolean sex, Integer age, Date birthDate, String comeFrom, Byte status, Date chipTime, Date createTime,
                  Date updateTime, String remark, Set<AnimalGenotype> animalGenotypes, Set<Animal> animalsForMother, Set<Medical> medicals,
                  Set<Anatomy> anatomies, Set<AntiEpidemic> antiEpidemics, Set<Examination> examinations, Set<AnimalFeed> animalFeeds,
                  Set<Animal> animalsForFather, Set<HouseTransfer> houseTransfers, Set<Atta> attas, Set<Adr> adrs) {
        this.house = house;
        this.userByUpdateUser = userByUpdateUser;
        this.atta = atta;
        this.animalByMother = animalByMother;
        this.userByCreateUser = userByCreateUser;
        this.animalByFather = animalByFather;
        this.animalType = animalType;
        this.microchipCode = microchipCode;
        this.tatooCode = tatooCode;
        this.studbookCode = studbookCode;
        this.earCode = earCode;
        this.lipCode = lipCode;
        this.name = name;
        this.sex = sex;
        this.age = age;
        this.birthDate = birthDate;
        this.comeFrom = comeFrom;
        this.status = status;
        this.chipTime = chipTime;
        this.createTime = createTime;
        this.updateTime = updateTime;
        this.remark = remark;
        this.animalGenotypes = animalGenotypes;
        this.animalsForMother = animalsForMother;
        this.medicals = medicals;
        this.anatomies = anatomies;
        this.antiEpidemics = antiEpidemics;
        this.examinations = examinations;
        this.animalFeeds = animalFeeds;
        this.animalsForFather = animalsForFather;
        this.houseTransfers = houseTransfers;
        this.attas = attas;
        this.adrs = adrs;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "ID", unique = true, nullable = false)
    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "HOUSE")
    public House getHouse() {
        return this.house;
    }

    public void setHouse(House house) {
        this.house = house;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "UPDATE_USER")
    public User getUserByUpdateUser() {
        return this.userByUpdateUser;
    }

    public void setUserByUpdateUser(User userByUpdateUser) {
        this.userByUpdateUser = userByUpdateUser;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "PHOTO")
    public Atta getAtta() {
        return this.atta;
    }

    public void setAtta(Atta atta) {
        this.atta = atta;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "MOTHER")
    public Animal getAnimalByMother() {
        return this.animalByMother;
    }

    public void setAnimalByMother(Animal animalByMother) {
        this.animalByMother = animalByMother;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CREATE_USER")
    public User getUserByCreateUser() {
        return this.userByCreateUser;
    }

    public void setUserByCreateUser(User userByCreateUser) {
        this.userByCreateUser = userByCreateUser;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "FATHER")
    public Animal getAnimalByFather() {
        return this.animalByFather;
    }

    public void setAnimalByFather(Animal animalByFather) {
        this.animalByFather = animalByFather;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "TYPE")
    public AnimalType getAnimalType() {
        return this.animalType;
    }

    public void setAnimalType(AnimalType animalType) {
        this.animalType = animalType;
    }

    @Column(name = "MICROCHIP_CODE", length = 50)
    public String getMicrochipCode() {
        return this.microchipCode;
    }

    public void setMicrochipCode(String microchipCode) {
        this.microchipCode = microchipCode;
    }

    @Column(name = "TATOO_CODE", length = 50)
    public String getTatooCode() {
        return this.tatooCode;
    }

    public void setTatooCode(String tatooCode) {
        this.tatooCode = tatooCode;
    }

    @Column(name = "STUDBOOK_CODE", length = 50)
    public String getStudbookCode() {
        return this.studbookCode;
    }

    public void setStudbookCode(String studbookCode) {
        this.studbookCode = studbookCode;
    }

    @Column(name = "EAR_CODE", length = 50)
    public String getEarCode() {
        return this.earCode;
    }

    public void setEarCode(String earCode) {
        this.earCode = earCode;
    }

    @Column(name = "LIP_CODE", length = 50)
    public String getLipCode() {
        return this.lipCode;
    }

    public void setLipCode(String lipCode) {
        this.lipCode = lipCode;
    }

    @Column(name = "NAME", length = 50)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "SEX")
    public Boolean getSex() {
        return this.sex;
    }

    public void setSex(Boolean sex) {
        this.sex = sex;
    }

    @Column(name = "AGE")
    public Integer getAge() {
        return this.age;
    }

    public void setAge(Integer age) {
        this.age = age;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "BIRTH_DATE", nullable = false, length = 19)
    public Date getBirthDate() {
        return this.birthDate;
    }

    public void setBirthDate(Date birthDate) {
        this.birthDate = birthDate;
    }

    @Column(name = "COME_FROM", length = 100)
    public String getComeFrom() {
        return this.comeFrom;
    }

    public void setComeFrom(String comeFrom) {
        this.comeFrom = comeFrom;
    }

    @Column(name = "STATUS")
    public Byte getStatus() {
        return this.status;
    }

    public void setStatus(Byte status) {
        this.status = status;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CHIP_TIME", length = 19)
    public Date getChipTime() {
        return this.chipTime;
    }

    public void setChipTime(Date chipTime) {
        this.chipTime = chipTime;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CREATE_TIME", length = 19)
    public Date getCreateTime() {
        return this.createTime;
    }

    public void setCreateTime(Date createTime) {
        this.createTime = createTime;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "UPDATE_TIME", length = 19)
    public Date getUpdateTime() {
        return this.updateTime;
    }

    public void setUpdateTime(Date updateTime) {
        this.updateTime = updateTime;
    }

    @Column(name = "REMARK", length = 300)
    public String getRemark() {
        return this.remark;
    }

    public void setRemark(String remark) {
        this.remark = remark;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "animal", orphanRemoval = true)
    @Cascade({CascadeType.SAVE_UPDATE})
    public Set<AnimalGenotype> getAnimalGenotypes() {
        return this.animalGenotypes;
    }

    public void setAnimalGenotypes(Set<AnimalGenotype> animalGenotypes) {
        this.animalGenotypes = animalGenotypes;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "animalByMother")
    public Set<Animal> getAnimalsForMother() {
        return this.animalsForMother;
    }

    public void setAnimalsForMother(Set<Animal> animalsForMother) {
        this.animalsForMother = animalsForMother;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "animal")
    public Set<Medical> getMedicals() {
        return this.medicals;
    }

    public void setMedicals(Set<Medical> medicals) {
        this.medicals = medicals;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "animal")
    public Set<Anatomy> getAnatomies() {
        return this.anatomies;
    }

    public void setAnatomies(Set<Anatomy> anatomies) {
        this.anatomies = anatomies;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "animal")
    public Set<AntiEpidemic> getAntiEpidemics() {
        return this.antiEpidemics;
    }

    public void setAntiEpidemics(Set<AntiEpidemic> antiEpidemics) {
        this.antiEpidemics = antiEpidemics;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "animal")
    public Set<Examination> getExaminations() {
        return this.examinations;
    }

    public void setExaminations(Set<Examination> examinations) {
        this.examinations = examinations;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "animal")
    public Set<AnimalFeed> getAnimalFeeds() {
        return this.animalFeeds;
    }

    public void setAnimalFeeds(Set<AnimalFeed> animalFeeds) {
        this.animalFeeds = animalFeeds;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "animalByFather")
    public Set<Animal> getAnimalsForFather() {
        return this.animalsForFather;
    }

    public void setAnimalsForFather(Set<Animal> animalsForFather) {
        this.animalsForFather = animalsForFather;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "animal")
    public Set<HouseTransfer> getHouseTransfers() {
        return this.houseTransfers;
    }

    public void setHouseTransfers(Set<HouseTransfer> houseTransfers) {
        this.houseTransfers = houseTransfers;
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "animal_atta", catalog = "rpms", joinColumns = {@JoinColumn(name = "ANIMAL", nullable = false, updatable = false)}, inverseJoinColumns = {@JoinColumn(name = "ATTA", nullable = false, updatable = false)})
    public Set<Atta> getAttas() {
        return this.attas;
    }

    public void setAttas(Set<Atta> attas) {
        this.attas = attas;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "animal")
    public Set<Adr> getAdrs() {
        return this.adrs;
    }

    public void setAdrs(Set<Adr> adrs) {
        this.adrs = adrs;
    }

}
