package dendy.rpms.entity;

// Generated 2014-10-26 13:48:43 by Hibernate Tools 3.6.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Feed generated by hbm2java
 */
@Entity
@Table(name = "feed", catalog = "rpms")
public class Feed implements java.io.Serializable {

	private Long			id;
	private User			userByUpdateUser;
	private User			userByCreateUser;
	private FeedType		feedType;
	private String			name;
	private String			unit;
	private String			source;
	private Integer			count;
	private String			description;
	private String			remark;
	private Date			createTime;
	private Date			updateTime;
	private Set<Atta>		attas		= new HashSet<Atta>(0);
	private Set<AnimalFeed>	animalFeeds	= new HashSet<AnimalFeed>(0);

	public Feed() {
	}

	public Feed(String name) {
		this.name = name;
	}

	public Feed(User userByUpdateUser, User userByCreateUser, FeedType feedType, String name, String unit, String source, Integer count,
			String description, String remark, Date createTime, Date updateTime, Set<Atta> attas, Set<AnimalFeed> animalFeeds) {
		this.userByUpdateUser = userByUpdateUser;
		this.userByCreateUser = userByCreateUser;
		this.feedType = feedType;
		this.name = name;
		this.unit = unit;
		this.source = source;
		this.count = count;
		this.description = description;
		this.remark = remark;
		this.createTime = createTime;
		this.updateTime = updateTime;
		this.attas = attas;
		this.animalFeeds = animalFeeds;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "ID", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UPDATE_USER")
	public User getUserByUpdateUser() {
		return this.userByUpdateUser;
	}

	public void setUserByUpdateUser(User userByUpdateUser) {
		this.userByUpdateUser = userByUpdateUser;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CREATE_USER")
	public User getUserByCreateUser() {
		return this.userByCreateUser;
	}

	public void setUserByCreateUser(User userByCreateUser) {
		this.userByCreateUser = userByCreateUser;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TYPE")
	public FeedType getFeedType() {
		return this.feedType;
	}

	public void setFeedType(FeedType feedType) {
		this.feedType = feedType;
	}

	@Column(name = "NAME", nullable = false, length = 50)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "UNIT", length = 50)
	public String getUnit() {
		return this.unit;
	}

	public void setUnit(String unit) {
		this.unit = unit;
	}

	@Column(name = "SOURCE", length = 300)
	public String getSource() {
		return this.source;
	}

	public void setSource(String source) {
		this.source = source;
	}

	@Column(name = "COUNT")
	public Integer getCount() {
		return this.count;
	}

	public void setCount(Integer count) {
		this.count = count;
	}

	@Column(name = "DESCRIPTION", length = 1000)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "REMARK", length = 300)
	public String getRemark() {
		return this.remark;
	}

	public void setRemark(String remark) {
		this.remark = remark;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATE_TIME", length = 19)
	public Date getCreateTime() {
		return this.createTime;
	}

	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPDATE_TIME", length = 19)
	public Date getUpdateTime() {
		return this.updateTime;
	}

	public void setUpdateTime(Date updateTime) {
		this.updateTime = updateTime;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "feed_atta", catalog = "rpms", joinColumns = { @JoinColumn(name = "FEED", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "ATTA", nullable = false, updatable = false) })
	public Set<Atta> getAttas() {
		return this.attas;
	}

	public void setAttas(Set<Atta> attas) {
		this.attas = attas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "feed")
	public Set<AnimalFeed> getAnimalFeeds() {
		return this.animalFeeds;
	}

	public void setAnimalFeeds(Set<AnimalFeed> animalFeeds) {
		this.animalFeeds = animalFeeds;
	}

}
