package dendy.rpms.entity;

// Generated 2014-10-26 13:48:43 by Hibernate Tools 3.6.0

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * AnimalFeed generated by hbm2java
 */
@Entity
@Table(name = "animal_feed", catalog = "rpms")
public class AnimalFeed implements java.io.Serializable {

	private Long	id;
	private Animal	animal;
	private User	userByUpdateUser;
	private User	userByCreateUser;
	private Feed	feed;
	private User	userByFeedUser;
	private Integer	count;
	private Date	feedTime;
	private Date	createTime;
	private Date	updateTime;
	private String	remark;

	public AnimalFeed() {
	}

	public AnimalFeed(Animal animal, User userByUpdateUser, User userByCreateUser, Feed feed, User userByFeedUser, Integer count,
			Date feedTime, Date createTime, Date updateTime, String remark) {
		this.animal = animal;
		this.userByUpdateUser = userByUpdateUser;
		this.userByCreateUser = userByCreateUser;
		this.feed = feed;
		this.userByFeedUser = userByFeedUser;
		this.count = count;
		this.feedTime = feedTime;
		this.createTime = createTime;
		this.updateTime = updateTime;
		this.remark = remark;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "ID", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ANIMAL")
	public Animal getAnimal() {
		return this.animal;
	}

	public void setAnimal(Animal animal) {
		this.animal = animal;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UPDATE_USER")
	public User getUserByUpdateUser() {
		return this.userByUpdateUser;
	}

	public void setUserByUpdateUser(User userByUpdateUser) {
		this.userByUpdateUser = userByUpdateUser;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CREATE_USER")
	public User getUserByCreateUser() {
		return this.userByCreateUser;
	}

	public void setUserByCreateUser(User userByCreateUser) {
		this.userByCreateUser = userByCreateUser;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FEED")
	public Feed getFeed() {
		return this.feed;
	}

	public void setFeed(Feed feed) {
		this.feed = feed;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FEED_USER")
	public User getUserByFeedUser() {
		return this.userByFeedUser;
	}

	public void setUserByFeedUser(User userByFeedUser) {
		this.userByFeedUser = userByFeedUser;
	}

	@Column(name = "COUNT")
	public Integer getCount() {
		return this.count;
	}

	public void setCount(Integer count) {
		this.count = count;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "FEED_TIME", length = 19)
	public Date getFeedTime() {
		return this.feedTime;
	}

	public void setFeedTime(Date feedTime) {
		this.feedTime = feedTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATE_TIME", length = 19)
	public Date getCreateTime() {
		return this.createTime;
	}

	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPDATE_TIME", length = 19)
	public Date getUpdateTime() {
		return this.updateTime;
	}

	public void setUpdateTime(Date updateTime) {
		this.updateTime = updateTime;
	}

	@Column(name = "REMARK", length = 300)
	public String getRemark() {
		return this.remark;
	}

	public void setRemark(String remark) {
		this.remark = remark;
	}

}
