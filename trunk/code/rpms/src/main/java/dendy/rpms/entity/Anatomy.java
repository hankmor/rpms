package dendy.rpms.entity;

// Generated 2014-10-26 13:48:43 by Hibernate Tools 3.6.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Anatomy generated by hbm2java
 */
@Entity
@Table(name = "anatomy", catalog = "rpms")
public class Anatomy implements java.io.Serializable {

	private Long		id;
	private Animal		animal;
	private User		userByUpdateUser;
	private User		userByCreateUser;
	private String		veterinarian;
	private String		reason;
	private String		process;
	private String		result;
	private Date		doTime;
	private Date		createTime;
	private Date		updateTime;
	private String		remark;
	private Set<Atta>	attas	= new HashSet<Atta>(0);

	public Anatomy() {
	}

	public Anatomy(Animal animal, User userByUpdateUser, User userByCreateUser, String veterinarian, String reason, String process,
			String result, Date doTime, Date createTime, Date updateTime, String remark, Set<Atta> attas) {
		this.animal = animal;
		this.userByUpdateUser = userByUpdateUser;
		this.userByCreateUser = userByCreateUser;
		this.veterinarian = veterinarian;
		this.reason = reason;
		this.process = process;
		this.result = result;
		this.doTime = doTime;
		this.createTime = createTime;
		this.updateTime = updateTime;
		this.remark = remark;
		this.attas = attas;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "ID", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ANIMAL")
	public Animal getAnimal() {
		return this.animal;
	}

	public void setAnimal(Animal animal) {
		this.animal = animal;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UPDATE_USER")
	public User getUserByUpdateUser() {
		return this.userByUpdateUser;
	}

	public void setUserByUpdateUser(User userByUpdateUser) {
		this.userByUpdateUser = userByUpdateUser;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CREATE_USER")
	public User getUserByCreateUser() {
		return this.userByCreateUser;
	}

	public void setUserByCreateUser(User userByCreateUser) {
		this.userByCreateUser = userByCreateUser;
	}

	@Column(name = "VETERINARIAN", length = 50)
	public String getVeterinarian() {
		return this.veterinarian;
	}

	public void setVeterinarian(String veterinarian) {
		this.veterinarian = veterinarian;
	}

	@Column(name = "REASON", length = 300)
	public String getReason() {
		return this.reason;
	}

	public void setReason(String reason) {
		this.reason = reason;
	}

	@Column(name = "PROCESS", length = 500)
	public String getProcess() {
		return this.process;
	}

	public void setProcess(String process) {
		this.process = process;
	}

	@Column(name = "RESULT", length = 300)
	public String getResult() {
		return this.result;
	}

	public void setResult(String result) {
		this.result = result;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DO_TIME", length = 19)
	public Date getDoTime() {
		return this.doTime;
	}

	public void setDoTime(Date doTime) {
		this.doTime = doTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATE_TIME", length = 19)
	public Date getCreateTime() {
		return this.createTime;
	}

	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPDATE_TIME", length = 19)
	public Date getUpdateTime() {
		return this.updateTime;
	}

	public void setUpdateTime(Date updateTime) {
		this.updateTime = updateTime;
	}

	@Column(name = "REMARK", length = 300)
	public String getRemark() {
		return this.remark;
	}

	public void setRemark(String remark) {
		this.remark = remark;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "anatomy_atta", catalog = "rpms", joinColumns = { @JoinColumn(name = "ANATOMY", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "ATTA", nullable = false, updatable = false) })
	public Set<Atta> getAttas() {
		return this.attas;
	}

	public void setAttas(Set<Atta> attas) {
		this.attas = attas;
	}

}
