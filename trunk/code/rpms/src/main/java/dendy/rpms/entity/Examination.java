package dendy.rpms.entity;

// Generated 2014-10-26 13:48:43 by Hibernate Tools 3.6.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Examination generated by hbm2java
 */
@Entity
@Table(name = "examination", catalog = "rpms")
public class Examination implements java.io.Serializable {

	private Long					id;
	private Animal					animal;
	private User					userByUpdateUser;
	private User					userByCreateUser;
	private Float					weight;
	private Float					coutourLength;
	private Float					bodyLength;
	private Float					earLength;
	private Float					tailLength;
	private Float					neckGirth;
	private Float					chestGirth;
	private Float					abdominalGirth;
	private Float					leftFrontLegLength;
	private Float					leftBackLegLength;
	private Float					temperature;
	private String					examUser;
	private Date					examTime;
	private Date					createTime;
	private Date					updateTime;
	private String					remark;
	private Set<ExaminationAtta>	examinationAttas	= new HashSet<ExaminationAtta>(0);

	public Examination() {
	}

	public Examination(Animal animal, User userByUpdateUser, User userByCreateUser, Float weight, Float coutourLength, Float bodyLength,
			Float earLength, Float tailLength, Float neckGirth, Float chestGirth, Float abdominalGirth, Float leftFrontLegLength,
			Float leftBackLegLength, Float temperature, String examUser, Date examTime, Date createTime, Date updateTime, String remark,
			Set<ExaminationAtta> examinationAttas) {
		this.animal = animal;
		this.userByUpdateUser = userByUpdateUser;
		this.userByCreateUser = userByCreateUser;
		this.weight = weight;
		this.coutourLength = coutourLength;
		this.bodyLength = bodyLength;
		this.earLength = earLength;
		this.tailLength = tailLength;
		this.neckGirth = neckGirth;
		this.chestGirth = chestGirth;
		this.abdominalGirth = abdominalGirth;
		this.leftFrontLegLength = leftFrontLegLength;
		this.leftBackLegLength = leftBackLegLength;
		this.temperature = temperature;
		this.examUser = examUser;
		this.examTime = examTime;
		this.createTime = createTime;
		this.updateTime = updateTime;
		this.remark = remark;
		this.examinationAttas = examinationAttas;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "ID", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ANIMAL")
	public Animal getAnimal() {
		return this.animal;
	}

	public void setAnimal(Animal animal) {
		this.animal = animal;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UPDATE_USER")
	public User getUserByUpdateUser() {
		return this.userByUpdateUser;
	}

	public void setUserByUpdateUser(User userByUpdateUser) {
		this.userByUpdateUser = userByUpdateUser;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CREATE_USER")
	public User getUserByCreateUser() {
		return this.userByCreateUser;
	}

	public void setUserByCreateUser(User userByCreateUser) {
		this.userByCreateUser = userByCreateUser;
	}

	@Column(name = "WEIGHT", precision = 10)
	public Float getWeight() {
		return this.weight;
	}

	public void setWeight(Float weight) {
		this.weight = weight;
	}

	@Column(name = "COUTOUR_LENGTH", precision = 10)
	public Float getCoutourLength() {
		return this.coutourLength;
	}

	public void setCoutourLength(Float coutourLength) {
		this.coutourLength = coutourLength;
	}

	@Column(name = "BODY_LENGTH", precision = 10)
	public Float getBodyLength() {
		return this.bodyLength;
	}

	public void setBodyLength(Float bodyLength) {
		this.bodyLength = bodyLength;
	}

	@Column(name = "EAR_LENGTH", precision = 10)
	public Float getEarLength() {
		return this.earLength;
	}

	public void setEarLength(Float earLength) {
		this.earLength = earLength;
	}

	@Column(name = "TAIL_LENGTH", precision = 10)
	public Float getTailLength() {
		return this.tailLength;
	}

	public void setTailLength(Float tailLength) {
		this.tailLength = tailLength;
	}

	@Column(name = "NECK_GIRTH", precision = 10)
	public Float getNeckGirth() {
		return this.neckGirth;
	}

	public void setNeckGirth(Float neckGirth) {
		this.neckGirth = neckGirth;
	}

	@Column(name = "CHEST_GIRTH", precision = 10)
	public Float getChestGirth() {
		return this.chestGirth;
	}

	public void setChestGirth(Float chestGirth) {
		this.chestGirth = chestGirth;
	}

	@Column(name = "ABDOMINAL_GIRTH", precision = 10)
	public Float getAbdominalGirth() {
		return this.abdominalGirth;
	}

	public void setAbdominalGirth(Float abdominalGirth) {
		this.abdominalGirth = abdominalGirth;
	}

	@Column(name = "LEFT_FRONT_LEG_LENGTH", precision = 10)
	public Float getLeftFrontLegLength() {
		return this.leftFrontLegLength;
	}

	public void setLeftFrontLegLength(Float leftFrontLegLength) {
		this.leftFrontLegLength = leftFrontLegLength;
	}

	@Column(name = "LEFT_BACK_LEG_LENGTH", precision = 10)
	public Float getLeftBackLegLength() {
		return this.leftBackLegLength;
	}

	public void setLeftBackLegLength(Float leftBackLegLength) {
		this.leftBackLegLength = leftBackLegLength;
	}

	@Column(name = "TEMPERATURE", precision = 10)
	public Float getTemperature() {
		return this.temperature;
	}

	public void setTemperature(Float temperature) {
		this.temperature = temperature;
	}

	@Column(name = "EXAM_USER", length = 50)
	public String getExamUser() {
		return this.examUser;
	}

	public void setExamUser(String examUser) {
		this.examUser = examUser;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "EXAM_TIME", length = 19)
	public Date getExamTime() {
		return this.examTime;
	}

	public void setExamTime(Date examTime) {
		this.examTime = examTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATE_TIME", length = 19)
	public Date getCreateTime() {
		return this.createTime;
	}

	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPDATE_TIME", length = 19)
	public Date getUpdateTime() {
		return this.updateTime;
	}

	public void setUpdateTime(Date updateTime) {
		this.updateTime = updateTime;
	}

	@Column(name = "REMARK", length = 300)
	public String getRemark() {
		return this.remark;
	}

	public void setRemark(String remark) {
		this.remark = remark;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "examination")
	public Set<ExaminationAtta> getExaminationAttas() {
		return this.examinationAttas;
	}

	public void setExaminationAttas(Set<ExaminationAtta> examinationAttas) {
		this.examinationAttas = examinationAttas;
	}

}
