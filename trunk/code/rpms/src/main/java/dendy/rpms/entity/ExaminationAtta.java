package dendy.rpms.entity;

// Generated 2014-10-26 13:48:43 by Hibernate Tools 3.6.0

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * ExaminationAtta generated by hbm2java
 */
@Entity
@Table(name = "examination_atta", catalog = "rpms")
public class ExaminationAtta implements java.io.Serializable {

	private ExaminationAttaId	id;
	private Atta				atta;
	private Examination			examination;
	private Byte				type;

	public ExaminationAtta() {
	}

	public ExaminationAtta(ExaminationAttaId id, Atta atta, Examination examination) {
		this.id = id;
		this.atta = atta;
		this.examination = examination;
	}

	public ExaminationAtta(ExaminationAttaId id, Atta atta, Examination examination, Byte type) {
		this.id = id;
		this.atta = atta;
		this.examination = examination;
		this.type = type;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "examination", column = @Column(name = "EXAMINATION", nullable = false)),
			@AttributeOverride(name = "atta", column = @Column(name = "ATTA", nullable = false)) })
	public ExaminationAttaId getId() {
		return this.id;
	}

	public void setId(ExaminationAttaId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ATTA", nullable = false, insertable = false, updatable = false)
	public Atta getAtta() {
		return this.atta;
	}

	public void setAtta(Atta atta) {
		this.atta = atta;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EXAMINATION", nullable = false, insertable = false, updatable = false)
	public Examination getExamination() {
		return this.examination;
	}

	public void setExamination(Examination examination) {
		this.examination = examination;
	}

	@Column(name = "TYPE")
	public Byte getType() {
		return this.type;
	}

	public void setType(Byte type) {
		this.type = type;
	}

}
